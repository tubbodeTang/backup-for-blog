由于之前svg项目，是通过把img给替换成svg的手段来实现的，
这个在angular中存在一个问题，就是替换了之后，embed元素去加载svg之后，angualr来不及获取其中的svg元素，而且在svg上还要做一些动画操作，点击事件等，也尝试过单纯用指令然后替换的话，好像也存在类似的问题，觉得不太好实现，这些事件可能都会因为来不及加载而无法绑定。
所以考虑到，能不能通过创建动态组件的方式，将svg的路径作为参数传给组件，通过组件的方法，去控制不同svg的动作。
如果不可以的话，可能需要将每个svg都单独封装成一个组件了。

先来看看动态创建组件

既然是动态组件，首先得有一个组件，其次才是动态，动态体现在这个组件是动态插入的，他的数据可能也是每次插入时动态赋予的。

所以我们先来创建一个组件，这和平时创建没什么区别。如果组件的数据不需要每次插入时动态赋予，那么连input都不需要。如果需要动态赋予，那么需要一个input来接受变化的数据。


有了组件之后，我们就要来使用它，也就是让他动态的出现在我们需要的地方。

而组件对他出现的地方也是有要求的，我们得先给他预留一个能让他出头的地方，
和不能指望土压的太死也能出苗一个道理

这个出头的地方，就是组件容器
我们知道<ng-template>就是一个最好的占位符，他不会在dom中显示，但是能被模版变量捕捉

通过angular中的神奇工具们，就可以把这个组件动态的插入到我们需要的地方。
如下：
https://segmentfault.com/a/1190000009175508


有了这个思路之后，就是创建了一个接收各种svg的组件，然后根据不同的组件去执行不同的方法
其次还要在组件们加载完成之后通过样式来控制他们的缩放和位置摆放，以实现自适应和位置的固定

